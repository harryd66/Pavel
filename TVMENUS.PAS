{*
*
*   Copyright (c) 1992,93 by Richard W.Hansen
*
*   This source code will compile.
*   Full source code available to registered users.
*
*}
(* This file was mangled by Mangler 1.10 (c) Copyright 1993 by BerEnd de Boer *)
 Unit TVMENUS;
 {$B+} {$X+} {$V-}
 {$I TVDEFS.INC}
 Interface
 USES TVConst,APP,DRIVERS,MENUS,VIEWS,ObjectS;


 Const CHECKMARK :String [10] ='û';
   CHECKMARKNULL :String [10] =' ';
   CHECKMARKLEN :BYTE =1;


TYPE PBXMENUBAR =^TBXMENUBAR;
TBXMENUBAR =Object (TMENUBAR)
Procedure CLEARMARKER (CMD :WORD );
Function FINDCMD(AMENU :PMENU;CMD :WORD ):PMENUITEM;
Procedure HAndLEEVENT (Var E :TEVENT );Virtual;
Function MARKERISSET(CMD :WORD ):BOOLEAN;
Procedure RESETMARKERS (FIRSTCMD :WORD;LASTCMD :WORD;NEWCMD :WORD );
Procedure SETMARKER(CMD :WORD );
Procedure TOGGLEMARKER (CMD :WORD );
End;

Function NEWMARKEDITEM (NAME,PARAM:TMENUSTR;KEYCODE :WORD;COMMAnd :WORD;AHELPCTX :WORD;NEXT :PMENUITEM ):PMENUITEM;
Function POPUPMENU (POPMENU :PMENUBOX ):WORD;
Function MOUSEPOPUPMENU (POPMENU :PMENUBOX ):WORD;
Procedure REGISTERTVMENUS;

Const RBXMENUBAR :TSTREAMREC =(OBJTYPE :5250;
      VMTLINK :OFS (TYPEOF (TBXMENUBAR )^);
	 LOAD :@ TBXMENUBAR .LOAD;STORE :@TBXMENUBAR .STORE );

Implementation


Function POPUPMENU (POPMENU:PMENUBOX):WORD;
Var OlIlOOOl0:WORD;
  OIOO0l010lO:TEVENT;
         OOIO:INTEGER;
	    OOIl:INTEGER;
Begin
OOIO:=POPMENU^.ORIGIN.X;
If (OOIO + POPMENU^.SIZE.X )> Desktop^.SIZE.X Then OOIO:=Desktop^.SIZE.X - POPMENU^.SIZE.X;
OOIl:=POPMENU^.ORIGIN.Y;
If (OOIl + POPMENU^.SIZE.Y )> Desktop^.SIZE.Y Then OOIl:=Desktop^.SIZE.Y - POPMENU^.SIZE.Y;
If (OOIO < 0 )Then OOIO:=0;If (OOIl < 0 )Then OOIl:=0;
POPMENU^.MOVETO (OOIO,OOIl );
POPUPMENU:=Desktop^.Execview (POPMENU );
End;

Function MOUSEPOPUPMENU (POPMENU:PMENUBOX):WORD;
Var
Count:WORD;
Event:TEVENT;
R:TPOINT;
Begin
Repeat
 Desktop^.GETEVENT (Event );
Until(Event.WHAT =EVMOUSEUP );
Desktop^.MAKELOCAL (MOUSEWHERE,R );
If (R.X + POPMENU^.SIZE.X )>Desktop^.SIZE.X Then R.X:=Desktop^.SIZE.X - POPMENU^.SIZE.X;
If (R.Y + POPMENU^.SIZE.Y )>Desktop^.SIZE.Y Then R.Y:=Desktop^.SIZE.Y - POPMENU^.SIZE.Y;
If (R.X < 0 )Then R.X:=0;
If (R.Y < 0 )Then R.Y:=0;
POPMENU^.MOVETO (R.X,R.Y );
MOUSEPOPUPMENU:=Desktop^.Execview (POPMENU );
End;


Function NEWMARKEDITEM (NAME,PARAM:TMENUSTR;KEYCODE:WORD;COMMAnd:WORD;AHELPCTX:WORD;NEXT:PMENUITEM):PMENUITEM;
Var Count:BYTE;
Begin If (COPY (NAME,1,CHECKMARKLEN )<> CHECKMARK )Then INSERT(CHECKMARKNULL,NAME,1 );
If (NAME [CHECKMARKLEN + 1] <> ' ')Then INSERT (' ',NAME,CHECKMARKLEN + 1 );
NEWMARKEDITEM:=NEWITEM (NAME,PARAM,KEYCODE,COMMAnd,AHELPCTX,NEXT );
End;


Procedure TBXMENUBAR.HAndLEEVENT(Var E:TEVENT);
Begin
If (E.WHAT =EVCOMMAnd )Then
  If (E.COMMAnd >=CMMARKSTART )And(E.COMMAnd <=CMMARKEnd )Then
    Begin
     TOGGLEMARKER (E.COMMAnd );
    End;
INHERITED HAndLEEVENT(E );
End;


Procedure TBXMENUBAR.TOGGLEMARKER (CMD:WORD);
Begin
 If MARKERISSET (CMD )Then CLEARMARKER (CMD )
  ELSE SETMARKER (CMD );
End;



Procedure TBXMENUBAR.SETMARKER (CMD:WORD);
Var OO10:PMENUITEM;
         OIlO:BYTE;
Begin
OO10:=FINDCMD (MENU,CMD );
If (OO10 <> Nil )Then
   For OIlO:=1 TO CHECKMARKLEN Do
   OO10^.NAME^[OIlO]:=CHECKMARK [OIlO];
End;


Procedure TBXMENUBAR.CLEARMARKER (CMD:WORD);
Var OO10:PMENUITEM;
    OIlO:BYTE;
Begin
OO10:=FINDCMD (MENU,CMD );
If (OO10 <> Nil )Then
   For OIlO:=1 TO CHECKMARKLEN  Do
   OO10^.NAME^[OIlO]:=CHECKMARKNULL [OIlO];
End;


Function TBXMENUBAR.MARKERISSET (CMD:WORD):BOOLEAN;
Var OO10:PMENUITEM;
Begin
 MARKERISSET:=FALSE;
 OO10:=FINDCMD (MENU,CMD );
 If (OO10 <> Nil )Then MARKERISSET:=(COPY (OO10^.NAME^,1,CHECKMARKLEN )=CHECKMARK );
End;


Procedure TBXMENUBAR.RESETMARKERS (FIRSTCMD:WORD;LASTCMD:WORD;NEWCMD:WORD);
Var OO10:PMENUITEM;
    OIlO:BYTE;
Begin
OO10:=FINDCMD (MENU,FIRSTCMD );
While (OO10 <> Nil ) Do
 Begin
  If (OO10^.COMMAnd=NEWCMD )Then
   For OIlO:=1 TO CHECKMARKLEN  Do
    OO10^.NAME^[OIlO]:=CHECKMARK [OIlO]
  ELSE
    If (OO10^.COMMAnd >=FIRSTCMD )And (OO10^.COMMAnd <=LASTCMD )Then
     For OIlO:=1 TO CHECKMARKLEN  Do
	OO10^.NAME^[OIlO]:=CHECKMARKNULL[OIlO];
	OO10:=OO10^.NEXT;
 End;
End;


Function TBXMENUBAR.FINDCMD (AMENU:PMENU;CMD:WORD):PMENUITEM;
Var OO10:PMENUITEM;
OI1000l1II00:PMENUITEM;
Begin
OI1000l1II00:=Nil;
OO10:=AMENU^.ITEMS;
While (OO10 <> Nil )And (OI1000l1II00 =Nil ) Do
 Begin
  If (OO10^.COMMAnd =0 )And (OO10^.NAME <> Nil )Then OI1000l1II00:=FINDCMD (OO10^.SUBMENU,CMD )ELSE
  If (OO10^.COMMAnd =CMD )And NOT OO10^.DISABLED Then OI1000l1II00:=OO10;OO10:=OO10^.NEXT;
 End;
FINDCMD:=OI1000l1II00;
End;


Procedure REGISTERTVMENUS;
Begin
REGISTERTYPE (RBXMENUBAR );
End;
End .

